// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

import UIKit

extension UIColor {
  convenience init(rgbaValue: UInt32) {
    let red   = CGFloat((rgbaValue >> 24) & 0xff) / 255.0
    let green = CGFloat((rgbaValue >> 16) & 0xff) / 255.0
    let blue  = CGFloat((rgbaValue >>  8) & 0xff) / 255.0
    let alpha = CGFloat((rgbaValue      ) & 0xff) / 255.0

    self.init(red: red, green: green, blue: blue, alpha: alpha)
  }
}

{% if colors %}
extension UIColor {
  enum {{enumName|swiftIdentifier}}: UInt32 {
    {% for color in colors %}
    /// <span style="display:block;width:3em;height:2em;border:1px solid black;background:#{{color.rgb}}"></span>
    /// Alpha: {{color.alpha|hexToInt|int255toFloat|percent}} <br/> (0x{{color.rgba}})
    case {{color.name|swiftIdentifier}} = 0x{{color.rgba}}
    {% endfor %}

    var color: UIColor {
      return UIColor(named: self)
    }
  }

  convenience init(named name: {{enumName}}) {
    self.init(rgbaValue: name.rawValue)
  }
}
{% else %}
// No color found
{% endif %}
